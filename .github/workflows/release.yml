name: release

on:
  push:
    tags: [ 'v*' ]
  workflow_dispatch: {}

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.x'
          cache: true

      - name: Install eBPF toolchain (bpftool, clang/llvm)
        run: |
          set -euxo pipefail
          sudo apt-get update
          sudo apt-get install -y \
            clang llvm make gcc libelf-dev libbpf-dev pkg-config
          if sudo apt-get install -y bpftool; then
            echo "BPFOOL=$(command -v bpftool)" >> "$GITHUB_ENV"
          else
            KREL="$(uname -r)"
            sudo apt-get install -y linux-tools-common || true
            sudo apt-get install -y linux-tools-generic linux-cloud-tools-generic || true
            sudo apt-get install -y linux-tools-azure linux-cloud-tools-azure || true
            sudo apt-get install -y "linux-tools-${KREL}" || true
            BPFOOL=""
            for p in /usr/sbin/bpftool /usr/bin/bpftool \
                     "/usr/lib/linux-tools-${KREL}/bpftool" \
                     /usr/lib/linux-tools-*/bpftool; do
              if [ -x "$p" ]; then BPFOOL="$p"; break; fi
            done
            if [ -z "$BPFOOL" ]; then
              echo "bpftool not found via apt; building from source..."
              sudo apt-get install -y git build-essential flex bison libcap-dev libzstd-dev
              git clone --depth=1 https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git /tmp/bpf-next
              make -C /tmp/bpf-next/tools/bpf/bpftool
              BPFOOL=/tmp/bpf-next/tools/bpf/bpftool/bpftool
            fi
            echo "BPFOOL=$BPFOOL" >> "$GITHUB_ENV"
          fi
          echo "Using BPFOOL=${BPFOOL:-$(command -v bpftool || true)}"
          "${BPFOOL:-$(command -v bpftool)}" version

      - name: Prebuild eBPF objects (safe if present)
        if: ${{ hashFiles('bpf/Makefile') != '' && env.BPFOOL != '' }}
        working-directory: bpf
        run: make
        env:
          BPFOOL: ${{ env.BPFOOL }}

      - name: Sync modules (tidy + download)
        run: |
          go env -w GOPROXY=https://proxy.golang.org,direct
          go mod tidy
          go mod download all

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          distribution: goreleaser

      - name: Release with GoReleaser
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: goreleaser release --clean