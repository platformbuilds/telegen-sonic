name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  build-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'
          cache: true

      - name: Install eBPF toolchain
        run: |
          set -eux
          sudo apt-get update
          sudo apt-get install -y \
            clang llvm libbpf-dev libelf-dev make pkg-config linux-tools-common linux-tools-generic
          KREL="$(uname -r)"
          sudo apt-get install -y "linux-tools-$KREL" || true
          BP="/usr/lib/linux-tools-$KREL/bpftool"
          if [ -x "$BP" ]; then echo "BPFOOL=$BP" >> "$GITHUB_ENV"; fi
          command -v bpftool >/dev/null 2>&1 && echo "bpftool on PATH"

      - name: Build eBPF objects
        working-directory: bpf
        run: make
        env:
          BPFOOL: ${{ env.BPFOOL }}

      - name: Sync modules (tidy + download)
        run: |
          go env -w GOPROXY=https://proxy.golang.org,direct
          go mod tidy
          go mod download all

      - name: Build (all modules)
        run: go build ./...

      - name: Run tests
        run: go test -race -count=1 ./...

      - name: Verify static binary builds
        run: CGO_ENABLED=0 go build -trimpath -ldflags="-s -w" ./...